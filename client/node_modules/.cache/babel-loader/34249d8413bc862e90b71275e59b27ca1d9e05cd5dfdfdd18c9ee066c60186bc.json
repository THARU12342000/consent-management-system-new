{"ast":null,"code":"var _jsxFileName = \"F:\\\\Intern\\\\CMS\\\\consent-management-system-new\\\\client\\\\src\\\\components\\\\agreements\\\\AgreementForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport api from '../api/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AgreementForm() {\n  _s();\n  const [agreements, setAgreements] = useState({});\n  const [message, setMessage] = useState('');\n\n  // Load existing agreements on mount\n  useEffect(() => {\n    api.get('/agreements').then(res => setAgreements(res.data)).catch(() => setMessage('No existing agreements found'));\n  }, []);\n  const handleChange = e => {\n    setAgreements({\n      ...agreements,\n      [e.target.name]: e.target.checked\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await api.post('/agreements', agreements);\n      setMessage('Agreements saved successfully');\n    } catch {\n      setMessage('Failed to save agreements');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Manage Agreements\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        name: \"dataUsageConsent\",\n        checked: agreements.dataUsageConsent || false,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), \"Consent to use my data\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        name: \"marketingConsent\",\n        checked: agreements.marketingConsent || false,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), \"Consent to receive marketing materials\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Save Agreements\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(AgreementForm, \"pFQOlgR0wssvbBhRUOSMAwcM5VY=\");\n_c = AgreementForm;\nvar _c;\n$RefreshReg$(_c, \"AgreementForm\");","map":{"version":3,"names":["React","useEffect","useState","api","jsxDEV","_jsxDEV","AgreementForm","_s","agreements","setAgreements","message","setMessage","get","then","res","data","catch","handleChange","e","target","name","checked","handleSubmit","preventDefault","post","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","dataUsageConsent","onChange","marketingConsent","_c","$RefreshReg$"],"sources":["F:/Intern/CMS/consent-management-system-new/client/src/components/agreements/AgreementForm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport api from '../api/api';\r\n\r\nexport default function AgreementForm() {\r\n  const [agreements, setAgreements] = useState({});\r\n  const [message, setMessage] = useState('');\r\n\r\n  // Load existing agreements on mount\r\n  useEffect(() => {\r\n    api.get('/agreements')\r\n      .then(res => setAgreements(res.data))\r\n      .catch(() => setMessage('No existing agreements found'));\r\n  }, []);\r\n\r\n  const handleChange = e => {\r\n    setAgreements({...agreements, [e.target.name]: e.target.checked});\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    try {\r\n      await api.post('/agreements', agreements);\r\n      setMessage('Agreements saved successfully');\r\n    } catch {\r\n      setMessage('Failed to save agreements');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h2>Manage Agreements</h2>\r\n      {message && <p>{message}</p>}\r\n      <label>\r\n        <input\r\n          type=\"checkbox\"\r\n          name=\"dataUsageConsent\"\r\n          checked={agreements.dataUsageConsent || false}\r\n          onChange={handleChange}\r\n        />\r\n        Consent to use my data\r\n      </label>\r\n      <br />\r\n      <label>\r\n        <input\r\n          type=\"checkbox\"\r\n          name=\"marketingConsent\"\r\n          checked={agreements.marketingConsent || false}\r\n          onChange={handleChange}\r\n        />\r\n        Consent to receive marketing materials\r\n      </label>\r\n      <br />\r\n      <button type=\"submit\">Save Agreements</button>\r\n    </form>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}